// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



model Store {
  id          String      @id
  name        String
  description String?     @db.Text
  userId      String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  Product     Product[]
  OrderItem   OrderItem[]

  // @@index([userId])
}

model Category {
  slug     String    @id
  name     String
  products Product[]
}

model Product {
  id          String      @id @default(uuid())
  name        String
  slug        String
  description String?     @db.Text
  price       Decimal
  images      Json
  storeId     String
  Store       Store       @relation(fields: [storeId], references: [id])
  categoryId  String
  Category    Category    @relation(fields: [categoryId], references: [slug])
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  orderItems  OrderItem[]

  @@index([storeId, categoryId, name, slug])
}

enum TRANSACTION_STATUS {
  PENDING
  PAID
  CANCELED
}

model Order {
  id               String             @id
  totalPrice       Decimal
  token            String
  status           TRANSACTION_STATUS
  userId           String
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  orderItems       OrderItem[]

  @@index([userId])
}

model OrderItem {
  id        String  @id @default(uuid())
  orderId   String
  order     Order   @relation(fields: [orderId], references: [id])
  productId String
  product   Product @relation(fields: [productId], references: [id])
  storeId   String
  store     Store   @relation(fields: [storeId], references: [id])

  @@index([orderId])
  @@index([productId])
}

